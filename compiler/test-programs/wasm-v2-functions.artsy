
/* 1. accept comments */
/* 2. functions= function int hi(int x, int y){x = 2; y = 3; return x;}
/* 3. order of operation */
/* 4. multiply float and int */ 
/* 6. adding to an array of strings. (no char, and like python) */ 
/* 7. everytime displayMessage, it should show message*/ 
/* 8. writeln is line breaks */ 


int aNumber;
float secondNumber;
string someLetter;  /* unused variable */
float justAverage;

float test;

function float average(float a, float b, float c){
	float avg;
	avg = (a + b + c)/-2.3;
	return avg;
}

function int unreachableFunction(int x, float y){
   /* 
	This function does nothing and should
	Be removed from IR code in the optimization step
   */

   int result;
   result = x*y + x*y;

   return result;
}

function int displayMessage(){
	return -2 * 3;
}

function float ambitiousFunction (float a, float b, float c){

   /* great optimization opportunity */

   float result;
 
   result = (average(a, b, c) + average(a, b, c))/2.0;

   return result;
}

function float divideHalf(float a) {
   float result;
   result = a / 2.0;
   return result;
}

justAverage = average(12.5, 331.7, 25.8);
aNumber = displayMessage();
write justAverage;
writeln;

justAverage = justAverage * (justAverage + 2.0);
justAverage = average(justAverage, 0.0, 1.1);
aNumber = displayMessage();
write justAverage;
writeln;

aNumber = displayMessage();
write aNumber;
writeln;
aNumber = aNumber / (aNumber + aNumber * aNumber);
write aNumber;
writeln;

justAverage = ambitiousFunction(1.25, 3.0, 5.537);
aNumber = displayMessage();
write justAverage;
writeln;

test = divideHalf(3.0);
write test;
writeln;